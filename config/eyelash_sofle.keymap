#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>

/ {
  zip_scroll_scaler: zip_scroll_scaler {
    compatible = "zmk,input-processor-scaler";
    #input-processor-cells = <2>;
    type = <INPUT_EV_REL>;
    codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
    track-remainders;
  };
};

&mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
};

&msc_input_listener {
       input-processors = <&zip_scroll_scaler 2 1>;
};

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};


/ {

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&gresc       &kp N1   &kp N2      &kp N3     &kp N4     &kp N5        &mmv SCRL_UP        &kp N6        &kp N7      &kp N8      &kp N9     &kp N0     &kp MINUS
&kp TAB      &kp Q    &kp W       &kp E      &kp R      &kp T         &mmv SCRL_DOWN      &kp Y         &kp U       &kp I       &kp O      &kp P      &kp LBKT
&kp LSHFT    &kp A    &kp S       &kp D      &kp F      &kp G         &kp LEFT_ARROW      &kp H         &kp J       &kp K       &kp L      &kp SEMI   &kp APOS
&kp LCTRL    &kp Z    &kp X       &kp C      &kp V      &kp B         &kp RIGHT_ARROW     &kp N         &kp M       &kp COMMA   &kp DOT    &kp FSLH   &kp NUHS
&kp C_MUTE   &sl 2    &kp SPACE   &kp LGUI   &kp LALT   &lt 1 ESC     &kp LCLK            &lt 1 ENTER   &kp SPACE   &kp RALT    &kp BSPC   &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "L0";
        };

        layer_1 {
            bindings = <
&kp GRAVE    &trans         &trans         &mkp MCLK   &trans      &trans       &mmv MOVE_UP        &kp SLASH   &kp N7   &kp N8     &kp N9       &trans   &kp EQUAL
&kp CAPS     &kp TILDE      &mkp LCLK      &kp UP      &mkp RCLK   &mkp MB4     &mmv MOVE_DOWN      &kp STAR    &kp N4   &kp N5     &kp N6       &trans   &kp RBKT
&trans       &kp RA(NUBS)   &kp LEFT       &kp DOWN    &kp RIGHT   &mkp MB5     &mmv MOVE_LEFT      &kp MINUS   &kp N1   &kp N2     &kp N3       &trans   &trans
&trans       &kp NUBS       &kp LS(NUBS)   &trans      &trans      &trans       &mmv MOVE_RIGHT     &kp PLUS    &kp N0   &kp PLUS   &kp MINUS    &trans   &trans
&kp C_MUTE   &trans         &trans         &trans      &trans      &trans       &mkp LCLK           &trans      &trans   &trans     &kp DELETE   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_INC C_BRI_DEC>;
            display-name = "L1";
        };

        layer_2 {
            bindings = <
&kp F1   &kp F2   &kp F3      &kp F4      &kp F5         &kp F6           &mmv MOVE_UP        &kp F7           &kp F8            &kp F9            &kp F10           &kp F11           &kp F12
&trans   &trans   &kp PSCRN   &kp PG_UP   &kp INSERT     &trans           &mmv MOVE_DOWN      &bt BT_SEL 0     &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3      &bt BT_SEL 4      &sys_reset
&trans   &trans   &kp HOME    &kp PG_DN   &kp END        &trans           &mmv MOVE_LEFT      &bt BT_CLR       &bt BT_CLR_ALL    &trans            &trans            &trans            &bootloader
&trans   &trans   &trans      &soft_off   &out OUT_USB   &out OUT_BLE     &mmv MOVE_RIGHT     &rgb_ug RGB_ON   &rgb_ug RGB_OFF   &rgb_ug RGB_EFF   &rgb_ug RGB_EFR   &rgb_ug RGB_BRI   &rgb_ug RGB_BRD
&trans   &trans   &trans      &trans      &trans         &trans           &mkp LCLK           &trans           &trans            &trans            &trans            &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "L2";
        };

        layer_3 {
            bindings = <
&trans   &trans   &trans  &trans   &trans   &trans     &trans     &trans   &trans   &trans   &trans   &trans   &trans
&trans   &trans   &trans  &trans   &trans   &trans     &trans     &trans   &trans   &trans   &trans   &trans   &trans
&trans   &trans   &trans  &trans   &trans   &trans     &trans     &trans   &trans   &trans   &trans   &trans   &trans
&trans   &trans   &trans  &trans   &trans   &trans     &trans     &trans   &trans   &trans   &trans   &trans   &trans
&trans   &trans   &trans  &trans   &trans   &trans     &trans     &trans   &trans   &trans   &trans   &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "L3";
        };
    };
};
